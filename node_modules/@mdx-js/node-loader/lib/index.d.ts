/**
 * Create Node.js hooks to handle markdown and MDX.
 *
 * @param {Readonly<Options> | null | undefined} [loaderOptions]
 *   Configuration (optional).
 * @returns
 *   Node.js hooks.
 */
export function createLoader(loaderOptions?: Readonly<Options> | null | undefined): {
    initialize: (options: Readonly<Options> | null | undefined) => Promise<void>;
    load: (href: string, context: LoadHookContext, nextLoad: NextLoad) => Promise<LoadFnOutput>;
};
/**
 * Next.
 */
export type NextLoad = Parameters<LoadHook>[2];
/**
 * Configuration.
 *
 * Options are the same as `compile` from `@mdx-js/mdx` with the
 * exception that the `development` option is supported based on
 * whether you run Node with `--conditions development`.
 * You cannot pass it manually.
 */
export type Options = Omit<CompileOptions, "development">;
export type Settings = [regex: RegExp, process: Process];
import type { LoadHookContext } from 'node:module';
import type { LoadFnOutput } from 'node:module';
import type { LoadHook } from 'node:module';
import type { CompileOptions } from '@mdx-js/mdx';
import type { Process } from '@mdx-js/mdx/internal-create-format-aware-processors';
//# sourceMappingURL=index.d.ts.map